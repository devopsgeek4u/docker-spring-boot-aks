name: cicd-workflow to create docker image and upload into AWS ECR
on:
  push:
    branches: [ "master" ]
    
permissions:
  contents: read  # Allows reading repository contents
  
jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: Build with Maven
      run: mvn clean install
    - name: Login to Azure Container Registry
      run: |
        docker login ${{ secrets.ACR_NAME }}.azurecr.io \
          -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }}
    - name: Build and push Docker image to ACR
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        ACR_REPO=${{ secrets.ACR_NAME }}.azurecr.io/aspnetcoreapp
        docker build -t $ACR_REPO:${IMAGE_TAG} .
        docker push $ACR_REPO:${IMAGE_TAG}
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0    # Scan the Docker image
      with:
        image-ref: '$ACR_NAME/$ACR_REPO:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
